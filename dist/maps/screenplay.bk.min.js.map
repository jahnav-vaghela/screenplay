{"version":3,"sources":["maps/maps/screenplay.bk.js"],"names":["context","factory","module","exports","define","amd","Screenplay","undefined","getEventName","key","map","animation","-o-animation","-moz-animation","-webkit-animation","transition","-o-transition","-moz-transition","-webkit-transition","div","document","createElement","eventName","style","e","settings","arguments","length","_classCallCheck","this","_settings$async","async","steps","index","loops","indexes","markers","playing","animationEnd","transitionEnd","timer","events","step","play","stop","loop","pause","before","after","finale","_createClass","value","run","trigger","call","fn","repeat","i","push","time","next","clearTimeout","setTimeout","last","marker","toString","filter","f","_this","forEach","nb","_reverseIndex","_this2","go","concurrentSteps","_next","bind","Array","isArray","doms","_this3","domCount","done","dom","callback","removeEventListener","self","addEventListener","previous","buffer"],"mappings":"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","file":"../screenplay.bk.min.js","sourcesContent":["/* global define */\n\n(function (context, factory) {\n    'use strict';\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        context.Screenplay = factory();\n    }\n})(this, function () {\n    'use strict';\n\n    class Screenplay {\n        constructor (settings = {}) {\n            let {\n                async = true\n            } = settings;\n\n            this.async = async;\n            this.steps = [];\n            this.index = 0;\n            this.loops = 1;\n            this.indexes = [];\n            this.markers = {};\n            this.playing = false;\n            this.animationEnd = getEventName('animation');\n            this.transitionEnd = getEventName('transition');\n            this.timer = null;\n            this.events = {\n                'step': [],\n                'play': [],\n                'stop': [],\n                'loop': [],\n                'pause': [],\n                'before': [],\n                'after': []\n            };\n            this.finale = () => {};\n        }\n\n        play(loops = this.loops) {\n            this.loops = loops;\n            this.playing = true;\n            this.run();\n\n            return this.trigger('play');\n        }\n\n        pause() {\n            this.playing = false;\n            this.run();\n\n            return this.trigger('pause');\n        }\n\n        toggle() {\n            return this.playing ? this.pause() : this.play();\n        }\n\n        stop() {\n            this.loops = 1;\n            this.playing = false;\n            this.finale.call(this);\n\n            return this.trigger('stop');\n        }\n\n        step(fn, repeat = 1) {\n            for (let i = 0; i < repeat; i++) {\n                this.steps.push(fn);\n                this.indexes.push(this.steps.length - 1);\n            }\n\n            return this;\n        }\n\n        wait(time) {\n            this.steps.push(function (next) {\n                clearTimeout(this.timer);\n\n                this.timer = setTimeout(function () {\n                    next();\n                }, time);\n            });\n\n            return this;\n        }\n\n        repeat(repeat) {\n            let last = this.steps[this.steps.length - 1];\n\n            return this.step(last, repeat);\n        }\n\n        end(fn) {\n            this.finale = fn;\n\n            return this;\n        }\n\n        rewind() {\n            this.index = 0;\n            this.playing = true;\n            this.run();\n\n            return this;\n        }\n\n        marker(marker) {\n            this.markers[marker.toString()] = this.steps.length;\n\n            return this;\n        }\n\n        goto(marker) {\n            if (typeof marker === 'string') {\n                if (this.markers[marker]) {\n                    this.index = this.markers[marker];\n                    this.run();\n                }\n            }\n\n            if (typeof marker === 'number') {\n                if (this.indexes[marker]) {\n                    this.index = this.indexes[marker];\n                    this.run();\n                }\n            }\n\n            return this;\n        }\n\n        on(key, fn) {\n            this.events[key].push(fn);\n\n            return this;\n        }\n\n        off(key, fn) {\n            if (fn) {\n                this.events[key] = this.events[key].filter((f) => f !== fn);\n            } else {\n                this.events[key] = [];\n            }\n\n            return this;\n        }\n\n        trigger(key) {\n            this.events[key].forEach((fn) => fn.call(this));\n\n            return this;\n        }\n\n        loop(loops = -1) {\n            this.loops = loops;\n\n            return this;\n        }\n\n        previous(nb = 1) {\n            let index = this._reverseIndex(this.index - nb, true);\n\n            if (index) {\n                this.index = index;\n                this.run();\n            }\n\n            return this;\n        }\n\n        next(nb = 1) {\n            let index = this._reverseIndex(this.index + nb);\n\n            if (index) {\n                this.index = index;\n                this.run();\n            }\n\n            return this;\n        }\n\n        same() {\n            this.index -= 1;\n            this.run();\n\n            return this;\n        }\n\n        run() {\n            if (!this.playing) {\n                return;\n            }\n\n            if (this.index < 0) {\n                this.index = 0;\n            }\n\n            if (this.index >= this.steps.length) {\n                this.index = 0;\n\n                if (this.loops !== -1) {\n                    this.loops--;\n                }\n\n                if (this.loops === 0) {\n                    return this.stop();\n                }\n            }\n\n            const go = () => {\n                let step = this.steps[this.index],\n                    steps = step;\n\n                if (typeof step === 'function') {\n                    this.concurrentSteps = 1;\n\n                    step.call(this, this._next.bind(this));\n                }\n\n                if (Array.isArray(steps)) {\n                    this.concurrentSteps = steps.length;\n\n                    steps.forEach((step) => {\n                        step.call(this, this._next.bind(this));\n                    });\n                }\n            };\n\n            this.trigger('before');\n\n            if (this.async) {\n                setTimeout(go);\n            } else {\n                go();\n            }\n\n            return this;\n        }\n\n        _next(doms) {\n            let domCount = 0;\n\n            let done = () => {\n                if (--this.concurrentSteps === 0) {\n                    this.index++;\n                    this.run();\n                    this.trigger('after');\n                }\n            };\n\n            if (doms) {\n                doms = Array.isArray(doms) ? doms : [ doms ];\n\n                doms.forEach((dom) => {\n                    let self = this;\n\n                    function callback () {\n                        dom.removeEventListener(self.animationEnd,  callback, false);\n                        dom.removeEventListener(self.transitionEnd, callback, false);\n\n                        if (++domCount === doms.length) {\n                            done();\n                        }\n                    }\n\n                    dom.addEventListener(this.animationEnd,  callback, false);\n                    dom.addEventListener(this.transitionEnd, callback, false);\n                });\n            } else {\n                done();\n            }\n\n            return this;\n        }\n\n        _reverseIndex(index, previous) {\n            let buffer;\n\n            for (let i = 0; i < this.indexes.length; i++) {\n                if ((previous && this.indexes[i] >= index) || (!previous && this.indexes[i] > index)) {\n                    return buffer;\n                }\n                buffer = this.indexes[i];\n            }\n\n            return 0;\n        }\n    }\n\n    function getEventName (key) {\n        const map = {\n            animation: {\n                'animation': 'animationend',\n                '-o-animation': 'oAnimationEnd',\n                '-moz-animation': 'animationend',\n                '-webkit-animation': 'webkitAnimationEnd'\n            },\n            transition: {\n                'transition': 'transitionend',\n                '-o-transition': 'oTransitionEnd',\n                '-moz-transition': 'transitionend',\n                '-webkit-transition': 'webkitTransitionEnd'\n            }\n        };\n\n        try {\n            let div = document.createElement('div');\n\n            for (let eventName in map[key]) {\n                if (typeof(div.style[eventName]) !== 'undefined') {\n                    return map[key][eventName];\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    }\n\n    return Screenplay;\n});\n"]}